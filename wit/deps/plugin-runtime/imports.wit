package renderlet:plugin-runtime;

interface camera-position {
    use wasi:io/poll@0.2.0.{pollable};
    use wasi:webgpu/surface.{surface};
    use wasi:webgpu/webgpu.{gpu-texture};

    record camera {
        orientation: quaternion,
        position: vec3,
    }

    record vec3 {
        x: f32,
        y: f32,
        z: f32,
    }

    record quaternion {
        x: f32,
        y: f32,
        z: f32,
        w: f32,
    }

    on-camera-position-change-subscribe: func(surface: borrow<surface>) -> pollable;
    on-camera-position-change-get: func(surface: borrow<surface>) -> option<camera>;

    set-camera-position: func(camera: camera);

    present-transparent: func(texture: borrow<gpu-texture>);
}

world imports {
    import camera-position;

    // include wasi:webgpu/imports;

    // /// main entrypoint
    // export start: func();

    // /// print to stdout
    // import print: func(s: string);
}
